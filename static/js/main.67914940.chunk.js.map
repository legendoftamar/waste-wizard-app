{"version":3,"sources":["reducers/reducer-waste.js","reducers/reducer-favorites.js","reducers/reducer-search.js","reducers/index.js","actions/index.js","containers/search-bar.js","containers/item/item.js","containers/search-results.js","containers/favorites.js","components/app.js","index.js"],"names":["reducer","state","arguments","length","undefined","action","type","Object","objectSpread","waste","payload","initialState","favorites","reducer_favorites","concat","toConsumableArray","filter","element","title","reducer_search","search","allReducers","combineReducers","fetchWasteRequest","fetchWasteSuccess","fetchWasteError","favorite","body","unfavorite","SearchBar","event","this","props","refs","input","value","preventDefault","react_default","a","createElement","className","name","ref","onChange","handleChange","bind","onClick","handleSubmit","index_es","color","source","Component","connect","dispatch","bindActionCreators","WasteItem","item","favorited","forEach","_this","isInFavorites","renderStar","Parser","SearchResult","fetchWasteWithRedux","includes","keywords","map","wasteItem","key","fetch","method","then","response","Promise","all","json","_ref","_ref2","slicedToArray","status","Favorites","require","App","search_bar","search_results","containers_favorites","thunk","default","store","createStore","applyMiddleware","ReactDOM","render","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.67914940.chunk.js","sourcesContent":["//waste reducer\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return {};\n    case \"FETCH_SUCCESS\":\n      return { ...state, waste: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","//favorites reducer\n\nconst initialState = { favorites: [] };\n\nconst reducer_favorites = (state = initialState, action) => {\n    switch (action.type) {\n        case \"FAVORITE\": {\n            return {\n                ...state,\n                favorites: [...state.favorites, action.payload]\n            };\n        }\n        case \"UNFAVORITE\": {\n            state.favorites = state.favorites.filter(element => action.payload.title !== element.title)\n            return {\n                ...state,\n                favorites: [...state.favorites]\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer_favorites;","//search reducer\n\nconst reducer_search = (state = null, action) => {\n  switch (action.type) {\n    case \"SEARCH\":\n      return { ...state, search: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default reducer_search;","import { combineReducers } from 'redux';\nimport reducer from './reducer-waste';\nimport reducer_favorites from './reducer-favorites';\nimport reducer_search from './reducer-search';\n\n//combine all data into one object\nconst allReducers = combineReducers({\n    waste: reducer,\n    favorites: reducer_favorites,\n    search: reducer_search\n});\n\nexport default allReducers;","//action creators\n\nexport const search = (search) => {\n  //returns action\n  return {\n    type: 'SEARCH',\n    payload: search\n  }\n};\n\nexport const fetchWasteRequest = () => {\n  return {\n    type: \"FETCH_REQUEST\"\n  }\n};\n\nexport const fetchWasteSuccess = (payload) => {\n  return {\n    type: \"FETCH_SUCCESS\",\n    payload: payload\n  }\n};\n\nexport const fetchWasteError = () => {\n  return {\n    type: \"FETCH_ERROR\"\n  }\n};\n\nexport const favorite = (title, body) => {\n  return {\n    type: \"FAVORITE\",\n    payload: { title, body }\n  }\n};\n\nexport const unfavorite = (title, body) => {\n  return {\n    type: \"UNFAVORITE\",\n    payload: { title, body }\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { search } from '../actions/index.js';\nimport { bindActionCreators } from 'redux';\nimport { Icon } from '@shopify/polaris';\n\nclass SearchBar extends Component {\n\n  //prevent component from rerendering by default \n  handleSubmit(event) {\n    this.props.search(this.refs.input.value);\n    event.preventDefault();\n  }\n\n  //if search is cleared, then clear results\n  handleChange(event) {\n    if (!this.refs.input.value) {\n      this.props.search(\"&&&\");\n    }\n  }\n\n  //display data\n  render() {\n\n    if (this.props.waste != null && typeof this.props.waste.waste != \"undefined\") {\n      \n      return (\n\n        <div className=\"search-bar\">\n\n          <form>\n            <input className=\"search-input\" type=\"text\" name=\"search\" ref=\"input\" onChange={this.handleChange.bind(this)} />\n            <button type=\"submit\" onClick={this.handleSubmit.bind(this)}> <Icon color=\"white\" source=\"search\" /> </button>\n          </form>\n\n        </div>\n\n      )\n    }\n\n    else return (<p> </p>)\n\n  }\n\n}\n\n//use state as prop\nfunction mapStateToProps(state) {\n  return {\n    waste: state.waste\n  }\n}\n\n//use actions as props\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({ search: search }, dispatch);\n}\n\n//connect component to states and actions\nexport default connect(mapStateToProps, matchDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { favorite, unfavorite } from '../../actions/index.js'\nimport Parser from 'html-react-parser';\nimport { bindActionCreators } from 'redux';\n\nclass WasteItem extends Component {\n\n    //determines if item is favorited\n    isInFavorites(item) {\n        var favorited = \"false\";\n        this.props.favorites.favorites.forEach(element => {\n            if (element.title === item.title) {\n                favorited = \"true\";\n            }\n        });\n\n        return favorited;\n    }\n\n    renderStar() {\n\n        // if favorited, return green star\n        if ((this.isInFavorites(this.props.item)) === \"true\") {\n\n            return (\n\n                <div className=\"favorited\" onClick={() => this.props.unfavorite(this.props.item.title, this.props.item.body)} > &#9733; </div>\n\n            )\n        }\n\n        //if not, return grey star\n        return (\n            <div className=\"notFavorited\" onClick={() => this.props.favorite(this.props.item.title, this.props.item.body)} > &#9733; </div>\n        )\n\n    }\n\n    //display data\n\n    render() {\n        return (\n\n            <tr>\n                <td className=\"star\"> {this.renderStar()} </td>\n                <td className=\"item-title\"> {this.props.item.title} </td>\n                <td> {Parser(Parser(this.props.item.body))} </td>\n\n            </tr>\n\n        )\n    }\n}\n\n//use states as props\nfunction mapStateToProps(state) {\n    return {\n        waste: state.waste,\n        search: state.search,\n        favorites: state.favorites\n    }\n}\n\n// use actions as props\nfunction matchDispatchToProps(dispatch) {\n    return bindActionCreators({ favorite: favorite, unfavorite: unfavorite }, dispatch);\n}\n\n//connect component to states and actions\nexport default connect(mapStateToProps, matchDispatchToProps)(WasteItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWasteRequest, fetchWasteSuccess, fetchWasteError } from '../actions/index.js'\nimport WasteItem from './item/item';\n\nclass SearchResult extends Component {\n\n    //fetch all data after rendering component\n    componentDidMount() {\n        this.props.fetchWasteWithRedux()\n    }\n\n    //filter data based on search \n    search(element, search) {\n        if ((element.title).includes(search) || (element.body).includes(search) || (element.keywords).includes(search)) {\n\n            return true;\n        }\n\n        return false;\n    }\n\n    //display data\n\n    render() {\n\n        if (!this.props.search) {\n            return (<div> </div>);\n        }\n\n        //destructure\n        const { waste } = this.props.waste;\n        const { search } = this.props.search;\n        return (\n\n            <table>\n                <tbody>\n                    {\n                        waste.map((wasteItem) => {\n\n                            if (this.search(wasteItem, search))\n\n                                return (\n\n                                    //for each item in data based on search results, render a WasteItem\n                                    <WasteItem key={wasteItem.title} item={wasteItem}> </WasteItem>\n\n                                )\n                            else {\n                                return (null);\n                            }\n                        })\n                    }\n                </tbody>\n            </table>\n        );\n\n    }\n}\n\n//use states as props\nfunction mapStateToProps(state) {\n    return {\n        waste: state.waste,\n        search: state.search,\n        favorites: state.favorites\n    }\n}\n\n//fetch data with Redux\nfunction fetchWasteWithRedux() {\n    return (dispatch) => {\n        dispatch(fetchWasteRequest());\n        return fetchWaste().then(([response, json]) => {\n            if (response.status === 200) {\n                // if success, fetch json\n                dispatch(fetchWasteSuccess(json))\n            }\n            else {\n                dispatch(fetchWasteError())\n            }\n        })\n    }\n}\n\n//fetch data \nfunction fetchWaste() {\n    const URL = \"https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000\";\n    return fetch(URL, { method: 'GET' })\n        .then(response => Promise.all([response, response.json()]));\n}\n\n//connect component to states and actions\nexport default connect(mapStateToProps, { fetchWasteWithRedux })(SearchResult);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport WasteItem from \"./item/item\";\n\nclass Favorites extends Component {\n\n    render() {\n        //destructure\n        const { favorites } = this.props.favorites;\n\n        if (typeof favorites[0] != \"undefined\") {\n            return (\n\n                <div className=\"favorites\">\n\n                    <h2> Favorites </h2>\n\n                    <table>\n                        <tbody>\n                            {\n                                favorites.map((favorite) => {\n\n                                    return (\n\n                                        <WasteItem key={favorite.title} item={favorite}> </WasteItem>\n\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n\n                </div>\n            );\n\n        }\n\n        else {\n            return (<div></div>)\n        }\n    }\n}\n\n// use state as props\nfunction mapStateToProps(state) {\n    return {\n        favorites: state.favorites\n    };\n}\n\n//connect component to states and actions\nexport default connect(mapStateToProps)(Favorites);","import React from 'react';\nimport SearchBar from '../containers/search-bar';\nimport SearchResult from '../containers/search-results';\nimport Favorites from '../containers/favorites';\n\nrequire('./app.css');\n\nconst App = () => (\n\n  <div>\n\n    <h1>Toronto Waste Lookup</h1>\n\n    <div className=\"content\">\n\n      <SearchBar> </SearchBar>\n\n      <SearchResult></SearchResult> </div>\n\n    <div>\n\n      <Favorites></Favorites>\n\n    </div>\n\n  </div>\n\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { AppProvider } from '@shopify/polaris';\nimport { createStore, applyMiddleware } from 'redux';\nimport allReducers from './reducers';\nimport App from './components/app';\n\nrequire('./index.css');\n\nvar thunk = require('redux-thunk').default\n\n//all of the data for the entire application\nconst store = createStore(allReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    //every component has access to store\n    <Provider store={store}>\n        <AppProvider>\n            <App />\n        </AppProvider>\n    </Provider>\n\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}